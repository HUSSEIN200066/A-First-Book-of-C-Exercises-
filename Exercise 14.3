1. (Practice) Define the following terms:
a. Exception - is a value, a variable, or an object containing information about the error at the point the error occurs

b. try block - identifies the start of an exception-handling block of code.

c. catch block - receive a thrown exception and process it

d. Exception handler - when an error occurs while a function is executing, the function creates an exception.

e. Throw an exception - the process of generating and passing an exception

f. Catch an exception - receive a thrown exception and process it

2. (Practice) Enter and run Program 14.14.

//Done!!

#include "stdafx.h" 
#include <iostream>
using namespace std;
int main()
{
	int numerator, denominator;
	bool needDenominator = true;
	cout << "Enter a numerator(whole number only) : ";
	cin >> numerator;
	cout << "Enter a denominator(whole number only) : ";
	while (needDenominator)
	{
		cin >> denominator;
		try
		{
			if (denominator == 0)
				throw denominator;  // an integer value is thrown
		}
		catch (int e)
		{
			cout << "A denominator value of " << e << " is invalid." << endl;
			cout << "Please reenter the denominator(whole number only) : ";
			continue;  // send control back to the while statement
		}
		cout << numerator << '/' << denominator
			<< " = " << double(numerator) / double(denominator) << endl;
		needDenominator = false;
	}
	system("PAUSE");
	return 0;
}

3. (Modify) Replace the following statement in Program 14.14
cout << numerator <<'/' << denominator
     << “ = “ << double (numerator)/ double (denominator) << endl;
with the statement
cout << numerator <<'/' << denominator
     << “ = “ << numerator/denominator << endl;
and run the modified program. Enter the values 12 and 5, and explain why the result is incorrect
from the user’s viewpoint.



4. (Modify) Modify Program 14.14 so that it throws and catches the message ***Invalid input
-A denominator value of zero is not permitted***. (Hint: Review the caution at
the end of this section.)



5. (Modify) Modify Program 14.14 so that the try and catch blocks are included in a while
statement. The while statement should provide code that continuously requests the user to
enter a denominator until a non-zero number is entered. (Hint: The prompt to enter a new
denominator should be made in the catch block immediately after the message informing the
user an invalid denominator has been entered.)




6. (Modify) Modify Program 14.14 so that it continues to divide two numbers until the user
enters the number 999 (as a numerator or denominator) to terminate program execution.


